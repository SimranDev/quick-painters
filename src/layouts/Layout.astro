---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/tailwind.css';

export interface Props {
  title: string;
  description?: string;
}

const { 
  title, 
  description = "Quick Painters provides professional painting services for residential and commercial properties in New Zealand. Specializing in painting, waterproofing, ceiling work, pressure washing, roofing, and deck painting."
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/og-image.jpg" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="/og-image.jpg" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&family=Open+Sans:wght@400;500;600&display=swap" rel="stylesheet">
    
    <title>{title}</title>
    
    <!-- Scroll behavior -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const scrollElements = document.querySelectorAll('.scroll-animation');
        
        const elementInView = (el, dividend = 1) => {
          const elementTop = el.getBoundingClientRect().top;
          return elementTop <= (window.innerHeight || document.documentElement.clientHeight) / dividend;
        };
        
        const displayScrollElement = (element) => {
          element.classList.add('scrolled');
        };
        
        const hideScrollElement = (element) => {
          element.classList.remove('scrolled');
        };
        
        const handleScrollAnimation = () => {
          scrollElements.forEach((el) => {
            if (elementInView(el, 1.25)) {
              displayScrollElement(el);
            } else {
              hideScrollElement(el);
            }
          });
        };
        
        window.addEventListener('scroll', () => {
          handleScrollAnimation();
        });
        
        // Initialize
        handleScrollAnimation();
      });
    </script>
  </head>
  <body class="bg-slate-50 text-slate-800 font-sans">
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }
  
  body {
    min-height: 100vh;
    overflow-x: hidden;
  }
  
  .scroll-animation {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  .scroll-animation.scrolled {
    opacity: 1;
    transform: translateY(0);
  }
  
  .delay-100 {
    transition-delay: 0.1s;
  }
  
  .delay-200 {
    transition-delay: 0.2s;
  }
  
  .delay-300 {
    transition-delay: 0.3s;
  }
</style>